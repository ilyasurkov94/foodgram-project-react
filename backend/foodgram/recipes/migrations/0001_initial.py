# Generated by Django 4.0.2 on 2022-03-04 22:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Выберите название ингредиента', max_length=50, verbose_name='Назвиние ингредиента')),
                ('measurement_unit', models.CharField(help_text='Укажите единицу измерения', max_length=20, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='IngredientAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Минимальный показатель - 1')], verbose_name='Количество ингредиента')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_amounts', to='recipes.ingredient', verbose_name='Ингредиенты')),
            ],
            options={
                'verbose_name': 'Ингредиент в рецепте',
                'verbose_name_plural': 'Ингредиенты в рецепте',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Укажи название рецепта', max_length=200, verbose_name='Название рецепта')),
                ('image', models.ImageField(upload_to='recipes/', verbose_name='Картинка')),
                ('text', models.TextField(help_text='Опишите рецепт', verbose_name='Описание рецепта')),
                ('cooking_time', models.PositiveIntegerField(verbose_name='Время готовки, мин.')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации рецепта')),
                ('author', models.ForeignKey(help_text='Выбери автора рецепта', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор рецепта')),
                ('ingredients', models.ManyToManyField(related_name='recipes', through='recipes.IngredientAmount', to='recipes.Ingredient', verbose_name='Ингредиенты')),
            ],
            options={
                'verbose_name': ('Рецепт',),
                'verbose_name_plural': 'Рецепты',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': 'Такой тег уже есть'}, help_text='Имя тега, не более 50 символов', max_length=50, unique=True, verbose_name='Название тега')),
                ('hexcolor', models.CharField(default='#ffffff', error_messages={'unique': 'Такой hex-цвет уже используется'}, help_text="Используйте формат '#fffff'", max_length=7, unique=True, verbose_name='HEX-цвет')),
                ('slug', models.SlugField(error_messages={'unique': 'Такой slug уже используется'}, help_text='Выберите название-ссылку на тег', unique=True, verbose_name='Slug-адрес')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ShopList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='У кого в списке покупок', on_delete=django.db.models.deletion.CASCADE, related_name='users_shoplist', to='recipes.recipe')),
                ('user', models.ForeignKey(help_text='В списке покупок', on_delete=django.db.models.deletion.CASCADE, related_name='shoplist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Рецепт в списке покупок',
                'verbose_name_plural': 'Рецепты в списке покупок',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(related_name='recipes', to='recipes.Tag'),
        ),
        migrations.AddField(
            model_name='ingredientamount',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_amounts', to='recipes.recipe', verbose_name='Рецепты'),
        ),
        migrations.CreateModel(
            name='FollowOnUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(help_text='На какого автора подписан', on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='Кто подписан', on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Подписка юзера на автора',
                'verbose_name_plural': 'Подписки юзера на автора',
            },
        ),
        migrations.CreateModel(
            name='FollowOnRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='На какой рецепт подписан', on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='recipes.recipe')),
                ('user', models.ForeignKey(help_text='Кто подписан', on_delete=django.db.models.deletion.CASCADE, related_name='following_recipe', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Подписка юзера на рецепт',
                'verbose_name_plural': 'Подписки юзера на рецепт',
            },
        ),
        migrations.AddConstraint(
            model_name='shoplist',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='user_recipe_shoplist_relations'),
        ),
        migrations.AddConstraint(
            model_name='ingredientamount',
            constraint=models.UniqueConstraint(fields=('ingredient', 'recipe'), name='ingredient_recipe_relations'),
        ),
        migrations.AddConstraint(
            model_name='followonuser',
            constraint=models.UniqueConstraint(fields=('user', 'author'), name='user_author_relations'),
        ),
        migrations.AddConstraint(
            model_name='followonrecipe',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='user_recipe_relations'),
        ),
    ]
